<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<context:property-placeholder location="classpath:config/db.properties" />
		
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.jdbc.driver}"></property>
		<property name="url">
			<value>${db.jdbc.url}?serverTimezone=PRC&amp;characterEncoding=UTF-8</value>
		</property>
		<property name="username" value="${db.jdbc.username}"></property>
		<property name="password" value="${db.jdbc.password}"></property>
	</bean>
	
	<!-- mybatis 생성 -->
 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 <property name="dataSource" ref="dataSource"></property>
	 <!-- <property name="configLocation" value="file:src/main/resource/mybatis-config.xml"></property> -->
	 <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	 <property name="plugins">
	    <array>
	      <bean class="com.github.pagehelper.PageInterceptor">
	        <property name="properties">
	          <!-- config params as the following -->
	          <value>
		          helperDialect=mysql
	              reasonable=true
	              supportMethodsArguments=true
	              params=count=countSql
	              autoRuntimeDialect=true
	          </value>
	        </property>
	      </bean>
	    </array>
	  </property>
	  <!-- <property name="transactionFactory">
	    <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
	  </property>   -->
	</bean>
	<!-- 쿼리문 만들고 실행 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
    	destroy-method="clearCache">
        <constructor-arg ref="sqlSessionFactory"></constructor-arg>
    </bean>	
    <!-- Transaction -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		<qualifier value="transaction"/>
	</bean>
	<!-- 支持事务注解（@Transactional） -->
	<tx:annotation-driven />
	<!-- redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="32"></property>
        <property name="maxIdle" value="6"></property>
        <property name="testOnBorrow" value="true" />
	</bean>
	<bean id="jedisConnectionFactory"
	    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	    <property name="hostName" value="${db.redis.host}" />
	    <property name="port" value="${db.redis.port}" />
	    <property name="password" value="${db.redis.password}" />
	    <property name="timeout" value="${db.redis.timeout}" />
	    <property name="poolConfig" ref="jedisPoolConfig" />
	    <property name="usePool" value="true" />
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
	    <property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	<!-- 将session放入redis -->
	<bean id="redisHttpSessionConfiguration"
	class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
	    <property name="maxInactiveIntervalInSeconds" value="1500" />
	</bean>
	
	<bean name="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="basenames">
			<list>
				<value>classpath:ValidationAdmin</value>
				<value>classpath:ValidationMessages</value>
			</list> 
		</property>
	</bean>
	<!-- <bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource">
			<ref bean="messageSource" />
		</property>
	</bean> -->

	<context:component-scan base-package="com.spring.dao" />
	<context:component-scan base-package="com.spring.service" />

</beans>
